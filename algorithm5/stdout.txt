Checking test execution result...
[!] Test execution result: FAILED
Checking source code format...
  Preparing source code for format check...
  Running format check...
// =====================================================
//  Running cargo fmt...
// =====================================================
Diff in /home/runner/work/rustlings-zaychyk/rustlings-zaychyk/format_check/src/lib.rs:1:
 /*
-	bfs
-	This problem requires you to implement a basic BFS algorithm
+    bfs
+    This problem requires you to implement a basic BFS algorithm
 */
 
 //I AM NOT DONE
Diff in /home/runner/work/rustlings-zaychyk/rustlings-zaychyk/format_check/src/lib.rs:8:
 
 // Define a graph
 struct Graph {
-    adj: Vec<Vec<usize>>, 
+    adj: Vec<Vec<usize>>,
 }
 
 impl Graph {
Diff in /home/runner/work/rustlings-zaychyk/rustlings-zaychyk/format_check/src/lib.rs:21:
 
     // Add an edge to the graph
     fn add_edge(&mut self, src: usize, dest: usize) {
-        self.adj[src].push(dest); 
-        self.adj[dest].push(src); 
+        self.adj[src].push(dest);
+        self.adj[dest].push(src);
     }
 
     // Perform a breadth-first search on the graph, return the order of visited nodes
Diff in /home/runner/work/rustlings-zaychyk/rustlings-zaychyk/format_check/src/lib.rs:29:
     fn bfs_with_return(&self, start: usize) -> Vec<usize> {
-        
-		//TODO
+        //TODO
 
         let mut visit_order = vec![];
         visit_order
Diff in /home/runner/work/rustlings-zaychyk/rustlings-zaychyk/format_check/src/lib.rs:35:
     }
 }
 
-
 #[cfg(test)]
 mod tests {
     use super::*;
Diff in /home/runner/work/rustlings-zaychyk/rustlings-zaychyk/format_check/src/lib.rs:84:
         assert_eq!(visited_order, vec![0]);
     }
 }
-
 


// =====================================================
//    Running cargo clippy...
// =====================================================

[!] Source code format check: FAILED
